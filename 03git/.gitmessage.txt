
# <type>[optional scope]: <description>
# fix: a commit of the type fix patches a bug in your codebase (this correlates with PATCH in Semantic Versioning).
# feat: a commit of the type feat introduces a new feature to the codebase (this correlates with MINOR in Semantic Versioning).
# types other than fix: and feat: are allowed, for example @commitlint/config-conventional (based on the Angular convention) recommends
# build:, chore:, ci:, docs:, style:, refactor:, perf:, test:, and others.
# Example: feat(lang): add Polish language

# [optional body]

# [optional footer(s)]
# BREAKING CHANGE: a commit that has a footer BREAKING CHANGE:, or appends a ! after the type/scope,
# introduces a breaking API change (correlating with MAJOR in Semantic Versioning).
# A BREAKING CHANGE can be part of commits of any type.
# footers other than BREAKING CHANGE: <description> may be provided and follow a convention similar to git trailer format.
# Example: BREAKING CHANGE: `extends` key in config file is now used for extending other config files

Signed-off-by: Hemslo Wang <hemslo.wang@gmail.com>
